{
  "version": 3,
  "sources": ["../../olova/dist/olova.js"],
  "sourcesContent": ["let currentObserver = null;\r\n\r\n// Diffing utilities\r\nfunction diffProps(oldProps = {}, newProps = {}, element) {\r\n  // Handle className to class conversion\r\n  if (newProps.className !== undefined) {\r\n    newProps.class = newProps.className;\r\n    delete newProps.className;\r\n  }\r\n  if (oldProps.className !== undefined) {\r\n    oldProps.class = oldProps.className;\r\n    delete oldProps.className;\r\n  }\r\n\r\n  // Remove old props\r\n  for (const [key, value] of Object.entries(oldProps)) {\r\n    if (!(key in newProps)) {\r\n      if (key.startsWith(\"on\")) {\r\n        element.removeEventListener(key.slice(2).toLowerCase(), value);\r\n      } else if (key === \"style\") {\r\n        element.style.cssText = \"\";\r\n      } else {\r\n        element.removeAttribute(key);\r\n      }\r\n    }\r\n  }\r\n\r\n  // Set new props\r\n  for (const [key, value] of Object.entries(newProps)) {\r\n    if (value == null) continue;\r\n    if (oldProps[key] === value) continue;\r\n\r\n    if (key.startsWith(\"on\")) {\r\n      const eventName = key.slice(2).toLowerCase();\r\n      if (oldProps[key]) {\r\n        element.removeEventListener(eventName, oldProps[key]);\r\n      }\r\n      element.addEventListener(eventName, value);\r\n    } else if (key === \"ref\") {\r\n      if (value && typeof value === \"object\" && \"current\" in value) {\r\n        value.current = element;\r\n      } else if (typeof value === \"function\") {\r\n        value(element);\r\n      }\r\n    } else if (key === \"style\") {\r\n      const style = element.style;\r\n      if (typeof value === \"object\") {\r\n        Object.assign(style, value);\r\n      } else {\r\n        style.cssText = value;\r\n      }\r\n    } else {\r\n      element.setAttribute(key, value);\r\n    }\r\n  }\r\n}\r\n\r\nfunction diffChildren(oldChildren, newChildren, parent) {\r\n  const oldChildrenArray = Array.isArray(oldChildren)\r\n    ? oldChildren.flat()\r\n    : [oldChildren];\r\n  const newChildrenArray = Array.isArray(newChildren)\r\n    ? newChildren.flat()\r\n    : [newChildren];\r\n\r\n  const maxLength = Math.max(oldChildrenArray.length, newChildrenArray.length);\r\n\r\n  for (let i = 0; i < maxLength; i++) {\r\n    const oldChild = oldChildrenArray[i];\r\n    const newChild = newChildrenArray[i];\r\n\r\n    // Remove extra old nodes\r\n    if (oldChild && !newChild) {\r\n      if (oldChild instanceof Node) {\r\n        parent.removeChild(oldChild);\r\n      }\r\n      continue;\r\n    }\r\n\r\n    // Add new nodes\r\n    if (!oldChild && newChild) {\r\n      const node =\r\n        newChild instanceof Node\r\n          ? newChild\r\n          : document.createTextNode(String(newChild));\r\n      parent.appendChild(node);\r\n      continue;\r\n    }\r\n\r\n    // Update existing nodes\r\n    if (oldChild instanceof Node && newChild instanceof Node) {\r\n      if (\r\n        oldChild.nodeType !== newChild.nodeType ||\r\n        oldChild.nodeName !== newChild.nodeName\r\n      ) {\r\n        parent.replaceChild(newChild, oldChild);\r\n      } else {\r\n        diffProps(oldChild.attributes, newChild.attributes, oldChild);\r\n        diffChildren(\r\n          Array.from(oldChild.childNodes),\r\n          Array.from(newChild.childNodes),\r\n          oldChild\r\n        );\r\n      }\r\n    } else if (oldChild !== newChild) {\r\n      // Text node updates\r\n      const node = parent.childNodes[i];\r\n      if (node) {\r\n        node.textContent = String(newChild);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nclass Signal {\r\n  constructor(value) {\r\n    this._value = value;\r\n    this.observers = new Map();\r\n  }\r\n\r\n  get value() {\r\n    if (currentObserver) {\r\n      if (!this.observers.has(\"_root\")) {\r\n        this.observers.set(\"_root\", new Set());\r\n      }\r\n      this.observers.get(\"_root\").add(currentObserver);\r\n    }\r\n    return this._value;\r\n  }\r\n\r\n  set value(newValue) {\r\n    if (this._value === newValue) return;\r\n    const oldValue = this._value;\r\n    this._value = newValue;\r\n\r\n    if (this.observers.has(\"_root\")) {\r\n      for (const observer of this.observers.get(\"_root\")) {\r\n        observer();\r\n      }\r\n    }\r\n\r\n    if (typeof oldValue === \"object\" && typeof newValue === \"object\") {\r\n      const allProps = new Set([\r\n        ...Object.keys(oldValue),\r\n        ...Object.keys(newValue),\r\n      ]);\r\n\r\n      for (const prop of allProps) {\r\n        if (oldValue[prop] !== newValue[prop] && this.observers.has(prop)) {\r\n          for (const observer of this.observers.get(prop)) {\r\n            observer();\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  observe(property, observer) {\r\n    if (!this.observers.has(property)) {\r\n      this.observers.set(property, new Set());\r\n    }\r\n    this.observers.get(property).add(observer);\r\n  }\r\n\r\n  unobserve(property, observer) {\r\n    if (this.observers.has(property)) {\r\n      this.observers.get(property).delete(observer);\r\n    }\r\n  }\r\n}\r\n\r\nfunction State(initialValue) {\r\n  const sig = new Signal(initialValue);\r\n  const getter = () => sig.value;\r\n  getter.toString = () => sig.value;\r\n\r\n  getter.observe = (prop, fn) => sig.observe(prop, fn);\r\n  getter.unobserve = (prop, fn) => sig.unobserve(prop, fn);\r\n\r\n  return [\r\n    getter,\r\n    (newValue) => {\r\n      sig.value =\r\n        typeof newValue === \"function\" ? newValue(sig.value) : newValue;\r\n    },\r\n  ];\r\n}\r\n\r\nfunction Effect(fn) {\r\n  const execute = () => {\r\n    currentObserver = execute;\r\n    fn();\r\n    currentObserver = null;\r\n  };\r\n  execute();\r\n}\r\n\r\nfunction Memo(fn) {\r\n  const [get, set] = State(fn());\r\n  Effect(() => set(fn()));\r\n  return get;\r\n}\r\n\r\nfunction Ref(initialValue) {\r\n  const [get, set] = State({\r\n    current: initialValue,\r\n    toString() {\r\n      return this.current;\r\n    },\r\n    valueOf() {\r\n      return this.current;\r\n    },\r\n  });\r\n\r\n  const ref = {\r\n    get current() {\r\n      return get().current;\r\n    },\r\n    set current(value) {\r\n      set((prev) => {\r\n        if (prev.current === value) return prev;\r\n        return { ...prev, current: value };\r\n      });\r\n    },\r\n    toString() {\r\n      return this.current.toString();\r\n    },\r\n    valueOf() {\r\n      return this.current;\r\n    },\r\n  };\r\n\r\n  return ref;\r\n}\r\n\r\nfunction h(tag, props, ...children) {\r\n  if (tag === Fragment || Array.isArray(tag)) {\r\n    const fragment = document.createDocumentFragment();\r\n    const items = tag === Fragment ? props?.children || children : tag;\r\n\r\n    if (Array.isArray(items)) {\r\n      const append = document.createTextNode.bind(document);\r\n      items.forEach((child) => {\r\n        fragment.appendChild(\r\n          child instanceof Node\r\n            ? child\r\n            : child != null\r\n            ? append(String(child))\r\n            : null\r\n        );\r\n      });\r\n    }\r\n    return fragment;\r\n  }\r\n\r\n  if (!tag) return null;\r\n\r\n  const element =\r\n    typeof tag === \"function\" ? tag(props) : document.createElement(tag);\r\n\r\n  if (typeof tag === \"string\" && element && props) {\r\n    diffProps({}, props, element);\r\n  }\r\n\r\n  if (children.length) {\r\n    const fragment = document.createDocumentFragment();\r\n    const appendChild = (child) => {\r\n      if (child == null) return;\r\n\r\n      if (typeof child === \"function\") {\r\n        const textNode = document.createTextNode(\"\");\r\n        Effect(() => (textNode.textContent = child()));\r\n        fragment.appendChild(textNode);\r\n      } else if (child instanceof Node) {\r\n        fragment.appendChild(child);\r\n      } else if (Array.isArray(child)) {\r\n        child.flat().forEach(appendChild);\r\n      } else {\r\n        fragment.appendChild(document.createTextNode(String(child)));\r\n      }\r\n    };\r\n\r\n    children.forEach(appendChild);\r\n    element.appendChild(fragment);\r\n  }\r\n\r\n  return element;\r\n}\r\n\r\nconst Component = (Component, props) => {\r\n  if (typeof Component !== \"function\") {\r\n    throw new Error(\"Invalid Component: must be a function\");\r\n  }\r\n  return Component(props);\r\n};\r\n\r\nconst Fragment = (props) => props.children;\r\n\r\nwindow.Fragment = Fragment;\r\n\r\nconst Olova = {\r\n  render(component, container) {\r\n    const newElement =\r\n      typeof component === \"function\" ? component() : component;\r\n\r\n    if (container.firstChild) {\r\n      diffChildren([container.firstChild], [newElement], container);\r\n    } else {\r\n      container.appendChild(newElement);\r\n    }\r\n\r\n    return newElement;\r\n  },\r\n\r\n  mount(component, container) {\r\n    return this.render(component, container);\r\n  },\r\n\r\n  unmount(container) {\r\n    container.innerHTML = \"\";\r\n  },\r\n\r\n  Fragment,\r\n};\r\n\r\nconst contextRegistry = new Map();\r\n\r\nfunction Context(defaultValue) {\r\n  const id = Symbol(\"context\");\r\n  contextRegistry.set(id, defaultValue);\r\n\r\n  return {\r\n    Provider({ value, children }) {\r\n      const oldValue = contextRegistry.get(id);\r\n      contextRegistry.set(id, value);\r\n      const result = children;\r\n      contextRegistry.set(id, oldValue);\r\n      return result;\r\n    },\r\n\r\n    use() {\r\n      const value = contextRegistry.get(id);\r\n      if (value === undefined && defaultValue === undefined) {\r\n        throw new Error(\"Context used outside of Provider\");\r\n      }\r\n      return value ?? defaultValue;\r\n    },\r\n  };\r\n}\r\n\r\nfunction Callback(fn, deps) {\r\n  const [get, set] = State(() => ({\r\n    fn,\r\n    deps,\r\n    memoized: (...args) => fn(...args),\r\n  }));\r\n\r\n  Effect(() => {\r\n    const current = get();\r\n    if (!deps) return;\r\n\r\n    if (\r\n      !current.deps ||\r\n      deps.length !== current.deps.length ||\r\n      deps.some((dep, i) => dep !== current.deps[i])\r\n    ) {\r\n      set({\r\n        fn,\r\n        deps,\r\n        memoized: (...args) => fn(...args),\r\n      });\r\n    }\r\n  });\r\n\r\n  return () => get().memoized;\r\n}\r\n\r\nexport { State, Effect, Memo, Ref, Context, Callback, Component, h, Fragment };\r\n\r\nexport default Olova;\r\n"],
  "mappings": "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",
  "names": ["Component"]
}
